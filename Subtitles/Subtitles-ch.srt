1
00:00:34,133 --> 00:00:41,266
自动计算时代始于 1623 年，

2
00:00:41,266 --> 00:00:45,000
当时 Wilhelm Schickard 完成了他的木制计算器。

3
00:00:45,600 --> 00:00:51,100
这台机器使用齿轮并在十进制系统中工作。

4
00:00:51,700 --> 00:00:56,333
两个齿轮可以代表一个两位数。

5
00:00:57,066 --> 00:01:01,100
添加过程中进位的处理是

6
00:01:01,500 --> 00:01:04,400
在销和另一个齿轮的帮助下实现的。

7
00:01:04,566 --> 00:01:06,900
它是这样的...

8
00:01:08,066 --> 00:01:10,700
十位结转“一”并...

9
00:01:11,900 --> 00:01:14,266
结转“二”

10
00:01:15,533 --> 00:01:17,566
...

11
00:01:17,700 --> 00:01:21,433
结转“三”共计 30！

12
00:01:22,900 --> 00:01:25,466
如您所见，齿轮

13
00:01:25,500 --> 00:01:28,433
在十进制系统中非常适合加法。

14
00:01:29,600 --> 00:01:33,466
然而，今天的计算机都在二进制系统中工作，

15
00:01:34,133 --> 00:01:38,366
戈特弗里德·威廉·莱布尼茨 (Gottfried Wilhelm Leibniz) 在 17 世纪末，即希卡德 (Schickard) 发明大约 75 年后，对

16
00:01:38,366 --> 00:01:42,400
二进制系统 进行了记录 。

17
00:01:43,200 --> 00:01:45,900
例如，Herr Leibniz 现在向我们展示了如何

18
00:01:46,266 --> 00:01:50,166
在他的二进制系统中计算 3 + 1。

19
00:01:51,000 --> 00:01:57,266
3 表示为 1 * 2^1 + 1 * 2^0，即

20
00:01:57,833 --> 00:02:01,766
1 * 2 + 1 * 1。

21
00:02:02,066 --> 00:02:07,833
1 对应于 0 * 2 + 1 * 1。

22
00:02:08,566 --> 00:02:12,633
我们通过将两个数字一个接一个地写下来形成总和。

23
00:02:13,633 --> 00:02:17,966
就像我们在学校学习十进制一样。

24
00:02:19,200 --> 00:02:24,700
所以 1 + 1 = 0 ... 1 注意到了！

25
00:02:25,433 --> 00:02:30,666
1 +（记住）1 = 0 又一次记住了 1！

26
00:02:31,100 --> 00:02:36,366
最后，0 + 1 = 1 ...

27
00:02:36,366 --> 00:02:41,800
所以总和是 2 * 2^2 或 1 * 4，

28
00:02:42,200 --> 00:02:45,933
或者只是小数四！

29
00:02:46,966 --> 00:02:50,800
在计算中，我们看到我们

30
00:02:51,100 --> 00:02:56,533
必须两次考虑从低位到高位的进位。

31
00:02:57,066 --> 00:03:00,300
我们将在下文中多次遇到这个概念。

32
00:03:00,900 --> 00:03:04,000
因此，现在我们

33
00:03:04,000 --> 00:03:10,166
带着已知宇宙中的第一个二进制计算器 Z1 来到现代科技世界

34
00:03:10,366 --> 00:03:13,500
！ Konrad Zuse

35
00:03:13,866 --> 00:03:18,933
在 1937 年用数千个钣金零件组装了他的作品。

36
00:03:19,500 --> 00:03:23,800
在这里，我们看到了柏林科技博物馆的复制品。

37
00:03:24,800 --> 00:03:29,666
例如，这里的这一部分实现了带有加法单元的运算单元。

38
00:03:30,300 --> 00:03:34,300
考虑到单个元素的众多，似乎几乎不可能

39
00:03:34,533 --> 00:03:38,233
理解这个奇迹的核心是如何运作的。

40
00:03:38,600 --> 00:03:41,933
不过，幸运的是，位于亨费尔德的楚斯博物馆中有一个

41
00:03:41,933 --> 00:03:47,766
模型清楚地展示了基本原理。

42
00:03:48,833 --> 00:03:54,400
为了实现加法器功能，Zuse 使用了三种类型的组件，

43
00:03:54,400 --> 00:03:55,633
即...

44
00:03:55,633 --> 00:03:58,233
AND 和 XOR 门，

45
00:03:58,433 --> 00:04:01,200
以及简单的开关元件。 该模型与

46
00:04:02,033 --> 00:04:05,433
Konrad Zuse 自己绘制的

47
00:04:05,433 --> 00:04:10,100
加法器电路几乎相同 。

48
00:04:15,166 --> 00:04:17,700
因此，在下文中，我们将首先描述这三个基本元素的结构

49
00:04:17,700 --> 00:04:22,466
，从与门开始。

50
00:04:22,933 --> 00:04:31,166
这有两个输入 A 和 B 以及一个表示结果的输出。

51
00:04:31,500 --> 00:04:37,533
AND 运算的真值表定义了每个可能的 A 和 B 的结果。

52
00:04:37,800 --> 00:04:43,133
只有当 A 和 B 为一时，输出也为一。

53
00:04:43,533 --> 00:04:48,733
对于所有其他情况，我们得到零。

54
00:04:48,900 --> 00:04:56,833
让我们来看看 Konrad Zuse 如何使用他的钣金件实现此操作。

55
00:04:57,700 --> 00:05:01,533
为了不丢失方向，我们使用

56
00:05:01,533 --> 00:05:06,466
与 Hünfeld 模型相同的水平和垂直对齐方式。

57
00:05:07,700 --> 00:05:12,300
板A和B用于输入，

58
00:05:12,700 --> 00:05:16,400
它们可以分别向右和向左移动……

59
00:05:16,833 --> 00:05:23,166
从而使一或零可调。

60
00:05:24,000 --> 00:05:30,400
对于结果有输出表，它在垂直方向上移动

61
00:05:30,733 --> 00:05:35,700
，结果可以表示零和一。

62
00:05:37,133 --> 00:05:43,433
实际的链接逻辑是通过所谓的耦合板实现的，

63
00:05:43,733 --> 00:05:47,466
它有用于 AND 运算的特殊切口

64
00:05:47,733 --> 00:05:52,133
，也可以在垂直方向上移动。

65
00:05:54,166 --> 00:05:58,000
然后将三张纸堆叠在一起

66
00:05:58,233 --> 00:06:01,700
，并通过两个切换销相互连接。

67
00:06:02,566 --> 00:06:06,200
我们 使用水平耦合的引脚

68
00:06:06,466 --> 00:06:10,166
在分解图中实现了相同的效果

69
00:06:10,766 --> 00:06:16,033
。 仍然缺少的是触发 AND 电路的机制。

70
00:06:16,600 --> 00:06:20,400
为此，Konrad Zuse 提供了分度盘，

71
00:06:20,766 --> 00:06:26,300
它与输出盘一样可以垂直移动。

72
00:06:27,733 --> 00:06:31,100
现在我们检查电路是否正常工作

73
00:06:31,466 --> 00:06:35,533
并从真值表的第一行开始。

74
00:06:35,866 --> 00:06:40,666
作为输入，我们对 A 使用零，对 B 使用零。

75
00:06:41,433 --> 00:06:45,100
然后触发时钟脉冲。

76
00:06:45,600 --> 00:06:50,566
因为没有发生上耦合，所以输出表也保持

77
00:06:50,566 --> 00:06:55,233
在其原始位置并且结果为零。

78
00:06:55,766 --> 00:06:58,666
现在第二行……

79
00:06:59,633 --> 00:07:02,766
零和……

80
00:07:02,766 --> 00:07:04,333
一……

81
00:07:04,433 --> 00:07:08,500
又是零

82
00:07:09,066 --> 00:07:13,466
，因为上联轴器没有再次激活。

83
00:07:14,433 --> 00:07:17,366
现在是第三行……

84
00:07:18,133 --> 00:07:24,133
我们将输入 A 设置为 1，将 B 设置为零。

85
00:07:24,966 --> 00:07:29,533
这次时钟脉冲移动耦合板。

86
00:07:29,966 --> 00:07:37,933
然而，由于下耦合没有发生，输出表再次保持为零。

87
00:07:38,933 --> 00:07:43,166
最后，我们测试表的最后一行

88
00:07:43,600 --> 00:07:46,833
并将输入 A

89
00:07:48,500 --> 00:07:53,200
和 B 都设置为 1。

90
00:07:54,400 --> 00:08:02,300
输出板现在按时钟移动，因为上下

91
00:08:02,466 --> 00:08:08,900
耦合都发生了，结果是一个。

92
00:08:10,600 --> 00:08:14,433
所以我们已经完全验证了 AND 门

93
00:08:14,433 --> 00:08:18,433
，接下来我们看一下 XOR 门。

94
00:08:18,833 --> 00:08:22,033
为此，我们首先必须溶解与门，

95
00:08:22,233 --> 00:08:25,833
然后移除耦合板，

96
00:08:25,833 --> 00:08:29,233
最后用两个新板替换它

97
00:08:29,333 --> 00:08:33,100
，这些板具有用于 XOR 运算的正确切口。

98
00:08:33,866 --> 00:08:40,066
然后，床单最终通过开关引脚重新连接，瞧……

99
00:08:40,200 --> 00:08:44,366
我们独有的或门已完全组装好！

100
00:08:44,633 --> 00:08:48,200
这次的真值表是这样的：

101
00:08:48,400 --> 00:08:54,600
如果 A 和 B 相等，则结果为零。

102
00:08:54,600 --> 00:09:00,200
如果 A 和 B 不相等，则 XOR 运算结果为 1。

103
00:09:00,766 --> 00:09:03,600
所以回到测试我们的电路......

104
00:09:04,566 --> 00:09:08,266
零异或零

105
00:09:08,700 --> 00:09:13,600
等于零！

106
00:09:17,100 --> 00:09:22,600
零异或一

107
00:09:22,800 --> 00:09:26,400
等于一。

108
00:09:27,300 --> 00:09:30,000
现在您已经看到，如果 A 和 B 不相等，则右侧的

109
00:09:30,000 --> 00:09:35,166
片材会接管耦合。

110
00:09:38,566 --> 00:09:40,366
它继续......

111
00:09:40,366 --> 00:09:45,133
一个异或零 也

112
00:09:46,466 --> 00:09:47,600
等于

113
00:09:48,400 --> 00:09:51,033
一。

114
00:09:51,033 --> 00:09:54,900
这次左片接管了联轴器。

115
00:09:55,733 --> 00:09:57,666
剩下的就是……

116
00:10:00,100 --> 00:10:05,533
一异或一，

117
00:10:06,466 --> 00:10:09,966
然后再次等于零。

118
00:10:10,800 --> 00:10:15,200
既然我们已经实现了逻辑运算 AND 和 XOR，

119
00:10:15,466 --> 00:10:18,033
我们仍然缺少简单的开关。

120
00:10:18,466 --> 00:10:23,066
这包括一个定时和一个输出托盘，

121
00:10:23,066 --> 00:10:28,533
两者都可以水平移动，以及一个

122
00:10:28,533 --> 00:10:31,200
垂直对齐的输入托盘。

123
00:10:31,966 --> 00:10:36,533
所有三张纸当然都用开关销再次连接。

124
00:10:36,900 --> 00:10:43,466
在非活动状态下，时钟和输出片不耦合，

125
00:10:43,466 --> 00:10:46,200
因此脉冲不接通。

126
00:10:46,700 --> 00:10:49,466
如果开关处于活动状态，

127
00:10:50,033 --> 00:10:53,800
则转发时钟脉冲。

128
00:10:55,066 --> 00:10:58,366
通过描述的三个开关元件，我们现在拥有了

129
00:10:58,366 --> 00:11:02,733
Hünfeld 加法模型的所有成分。

130
00:11:02,733 --> 00:11:06,900
下面我们一步一步地解释加法器是如何构造的。

131
00:11:07,200 --> 00:11:13,466
我们从右上角开始，这里安装了一个 AND 和一个 XOR 门。

132
00:11:13,466 --> 00:11:19,400
该电路有两个输入，即A1和B1。

133
00:11:20,100 --> 00:11:28,600
然后有两个输出，即R为求和的结果，U为进位。

134
00:11:29,100 --> 00:11:33,200
门通过第一个时钟板激活。

135
00:11:34,066 --> 00:11:40,033
这里又是电路的真值表，顺便说一下，现在它

136
00:11:40,300 --> 00:11:43,000
被称为半加器。

137
00:11:43,000 --> 00:11:48,133
该组件因此具有两个输入，

138
00:11:48,133 --> 00:11:51,033
即第一被加数A1

139
00:11:51,633 --> 00:11:54,733
和第二被加数B1。

140
00:11:55,333 --> 00:11:58,166
然后我们有两个输出，

141
00:11:58,166 --> 00:12:04,300
即和R和进位U。

142
00:12:05,000 --> 00:12:08,366
接下来我们测试电路……

143
00:12:09,633 --> 00:12:12,200
零加零

144
00:12:12,700 --> 00:12:14,533
等于零

145
00:12:16,800 --> 00:12:18,466
！

146
00:12:18,600 --> 00:12:21,466
进位也为零。

147
00:12:22,133 --> 00:12:27,266
AND 和 XOR 都不传递时钟脉冲。

148
00:12:29,000 --> 00:12:35,000
在第二行中，我们将 A1 设置为零

149
00:12:35,466 --> 00:12:39,600
，将 B1 设置为一。

150
00:12:40,300 --> 00:12:43,600
这将激活 XOR 门

151
00:12:44,000 --> 00:12:45,700
并 切换

152
00:12:45,700 --> 00:12:47,833
时钟 。

153
00:12:48,966 --> 00:12:52,933
结果为一，进位

154
00:12:52,933 --> 00:12:55,633
保持为零。

155
00:12:56,000 --> 00:12:57,900
这同样适用于

156
00:12:59,366 --> 00:13:03,433
一加零。

157
00:13:04,466 --> 00:13:06,700
让我们看一下

158
00:13:06,900 --> 00:13:10,366
真值表的最后一行。

159
00:13:12,600 --> 00:13:15,333
这次

160
00:13:16,666 --> 00:13:18,333
一一激活与

161
00:13:18,400 --> 00:13:21,333
门

162
00:13:22,000 --> 00:13:24,266
，时钟导致

163
00:13:24,466 --> 00:13:27,366
进位设置。

164
00:13:28,966 --> 00:13:31,733
总和保持为零。

165
00:13:36,733 --> 00:13:39,733
所以我们的半加器似乎在工作。

166
00:13:40,200 --> 00:13:44,333
他可以正确地添加一个二进制数字并确定进位。

167
00:13:44,700 --> 00:13:48,766
该电路对于二进制数的最后一位已经足够了。

168
00:13:49,200 --> 00:13:55,300
然而，从倒数第二个位置开始，仍然必须考虑前面加法的进位。

169
00:13:55,733 --> 00:14:00,633
为了实现这一点，我们需要稍微扩展一下电路。

170
00:14:01,500 --> 00:14:04,633
这里又是我们的半加器的逻辑表示

171
00:14:04,633 --> 00:14:09,266
与加数 A1 和 B1

172
00:14:09,466 --> 00:14:14,433
，结果是总和 R 和进位 U。

173
00:14:14,766 --> 00:14:22,166
除了 A1 和 B1，我们现在得到进位 U1 作为第三个输入，

174
00:14:22,733 --> 00:14:26,466
它来自加法前一个数字。

175
00:14:26,700 --> 00:14:32,566
然后必须使用附加逻辑从 A1、B1 和 U1 计算

176
00:14:32,566 --> 00:14:38,400
新的总和 R1 和新的进位 U2

177
00:14:38,600 --> 00:14:43,333
。 真值表现在多了一列。

178
00:14:43,633 --> 00:14:48,266
顺便说一句，我们现在正在构建一个所谓的全加器，

179
00:14:48,633 --> 00:14:54,300
缩写为“Full Adder”。

180
00:14:55,366 --> 00:14:58,200
首先，让我们看

181
00:14:58,200 --> 00:15:03,700
一下总和 R1 的计算，只要恰好设置了一个输入

182
00:15:03,700 --> 00:15:09,033
A1、B1 或 U1，或者三者一起设置，总和 R1 就会变为 1。

183
00:15:09,300 --> 00:15:12,833
这种行为可以通过另一个 XOR 元素来实现，

184
00:15:13,200 --> 00:15:19,166
我们将进位 U1 和第一个 XOR 运算的结果输入其中。

185
00:15:19,166 --> 00:15:25,533
只要 A1 或 B1 置位，上面的 XOR 门就会切换。

186
00:15:25,833 --> 00:15:34,300
对于等于 0 的 U1，第二个 XOR 然后切换，最终结果为 1。

187
00:15:34,466 --> 00:15:39,900
如果 A1 和 B1 为零且 U1 已设置，则

188
00:15:40,200 --> 00:15:45,366
较低的 XOR 也会切换，结果再次为 1。

189
00:15:46,300 --> 00:15:50,800
现在问题出现了，来自第一个异或门的信息如何

190
00:15:51,166 --> 00:15:53,966
机械地进入第二个异或门。

191
00:15:54,200 --> 00:15:58,000
毕竟，冲动必须以某种方式出现。

192
00:15:58,466 --> 00:16:03,566
这一壮举是通过第二个钉板和一个开关实现的。

193
00:16:04,100 --> 00:16:07,000
让我们从原理上演示它是如何工作的

194
00:16:07,000 --> 00:16:11,533
，并查看真值表的第三行：

195
00:16:11,533 --> 00:16:18,600
零加一激活异或门。

196
00:16:19,600 --> 00:16:23,266
然后触发第一个节拍

197
00:16:23,633 --> 00:16:26,233
并翻转开关。

198
00:16:27,000 --> 00:16:30,633
在周期 2 中，来自第一个 XOR 的信息

199
00:16:30,633 --> 00:16:37,800
然后通过开关转移到第二个 XOR 并激活它。

200
00:16:38,866 --> 00:16:41,400
冲动在拐角处流动。

201
00:16:41,766 --> 00:16:49,233
现在我们需要第三个柱来触发第二个 XOR 门

202
00:16:49,466 --> 00:16:53,300
并计算正确的结果。

203
00:16:54,000 --> 00:16:59,900
现在我们可以计算结果 R1，进位 U2 仍然缺失。

204
00:17:00,533 --> 00:17:08,933
如果同时设置 A1 和 B1，则返回 1，然后激活与门。

205
00:17:09,833 --> 00:17:12,466
在这种情况下，

206
00:17:12,466 --> 00:17:17,133
借助第 2 小节的切换， 信息再次

207
00:17:17,833 --> 00:17:22,933
被推到拐角处。 设置 A1 或 B1

208
00:17:23,400 --> 00:17:26,266
激活上层 XOR 的情况仍然缺失。

209
00:17:26,700 --> 00:17:31,700
此外，还有来自先前位置的进位 U1。

210
00:17:32,433 --> 00:17:36,433
通过在另一个开关的帮助下将上层 XOR 信息从 U1

211
00:17:36,733 --> 00:17:41,700
转移 到 U2， 可以轻松实现进位的转发

212
00:17:41,700 --> 00:17:47,166
，当然时钟板 2 会再次接管。

213
00:17:47,733 --> 00:17:52,700
因此，我们的全加器是完整的，现在可以

214
00:17:52,700 --> 00:17:57,133
作为加法器中理论上任意数量位置的基本元素。

215
00:17:58,500 --> 00:18:01,933
Hünfeld 模型使用两个二进制数字。

216
00:18:02,166 --> 00:18:07,633
因此，让我们复制一次全加器并调整标签。

217
00:18:08,500 --> 00:18:14,166
然后我们使用转移板 U2 连接这两个部分。

218
00:18:14,600 --> 00:18:19,200
我们的 2 位加法器具有以下真值表：

219
00:18:19,633 --> 00:18:23,433
让我们首先计算一个没有进位的示例。

220
00:18:23,733 --> 00:18:31,166
二加一呢？

221
00:18:31,433 --> 00:18:34,766
输入触发两个异或门。

222
00:18:35,000 --> 00:18:39,966
然后小节 1 激活四个开关。

223
00:18:40,333 --> 00:18:44,566
Bar 2 将 XOR 信息推到拐角处

224
00:18:44,733 --> 00:18:48,233
并激活下方的 XOR 门。

225
00:18:48,600 --> 00:18:52,533
最后，第三根柱评估结果，

226
00:18:52,800 --> 00:18:59,033
正如预期的那样，二进制为 001 或十进制为 3。

227
00:18:59,633 --> 00:19:03,200
在这种情况下，进位链还没有被使用。

228
00:19:03,600 --> 00:19:09,866
所以最后我们从头开始做这个例子，所以……

229
00:19:11,333 --> 00:19:12,433
三

230
00:19:13,100 --> 00:19:14,100
加

231
00:19:15,233 --> 00:19:16,533
一。

232
00:19:16,766 --> 00:19:23,000
输入激活第一个 XOR 和第二个 AND 门。

233
00:19:23,600 --> 00:19:29,333
时钟 1 触发进位链的开关，

234
00:19:29,333 --> 00:19:35,733
以及计算第二位进位 U2 的开关。

235
00:19:36,000 --> 00:19:40,700
小节 2 将进位移至 U3。

236
00:19:40,866 --> 00:19:45,700
然后第 3 条没有进一步的影响。

237
00:19:45,933 --> 00:19:53,233
结果是正确的二进制 100 或十进制四。

238
00:19:54,300 --> 00:19:55,200
完毕！

239
00:19:55,966 --> 00:20:00,000
Konrad Zuse 确实设计了一个非常巧妙的东西：

240
00:20:00,533 --> 00:20:04,966
世界上第一个二进制加法器！

241
00:20:05,700 --> 00:20:07,033
他的同事

242
00:20:07,033 --> 00:20:08,766
Wilhelm Schickard 和……

243
00:20:08,766 --> 00:20:10,766
Gottfried Wilhelm Leibniz

244
00:20:10,766 --> 00:20:17,666
无疑会热烈鼓掌！

